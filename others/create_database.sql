CREATE DATABASE  IF NOT EXISTS sprint2;
USE sprint2;
CREATE TABLE IF NOT EXISTS `User` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `mobile` VARCHAR(255) NOT NULL, `password` VARCHAR(255) NOT NULL, `admins` TINYINT(1) NOT NULL, `disabled` TINYINT(1) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=INNODB;
CREATE TABLE IF NOT EXISTS `Agenda` (`id` INTEGER NOT NULL auto_increment , `address` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `User` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=INNODB;
CREATE TABLE IF NOT EXISTS `PaymentMethod` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL UNIQUE, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=INNODB;
CREATE TABLE IF NOT EXISTS `Product` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `description` VARCHAR(255) NOT NULL, `picture` VARCHAR(255) NOT NULL, `price` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;        
CREATE TABLE IF NOT EXISTS `order` (`id` INTEGER NOT NULL auto_increment , `state` VARCHAR(255) NOT NULL, `totalPrice` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER, `AgendaId` INTEGER, `PaymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `User` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`AgendaId`) REFERENCES `Agenda` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`PaymentMethodId`) REFERENCES `PaymentMethod` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=INNODB;
CREATE TABLE IF NOT EXISTS `orderproduct` (`OrderId` INTEGER NOT NULL , `ProductId` INTEGER NOT NULL , `quantity` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, UNIQUE `orderproduct_ProductId_OrderId_unique` (`OrderId`, `ProductId`), PRIMARY KEY (`OrderId`, `ProductId`), FOREIGN KEY (`OrderId`) REFERENCES `order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`ProductId`) REFERENCES `Product` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;